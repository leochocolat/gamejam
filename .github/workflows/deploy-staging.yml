name: üöÅ Deploy Staging

on:
    workflow_dispatch:
        inputs:
            ref:
                description: "Branch or tag to checkout to (default is main)"
                required: false
                default: "main"

    push:
        branches: [main]

concurrency:
    group: "staging"
    cancel-in-progress: true

jobs:
    Build:
        runs-on: ubuntu-latest

        steps:
            # IF INPUT REF IS DEFINED
            - name: üîñ Show input ref
              if: ${{ github.event.inputs.ref }}
              run: echo "Input ref is ${{ github.event.inputs.ref }}"

            - name: üîñ Check out input ref
              if: ${{ github.event.inputs.ref }}
              uses: actions/checkout@v2
              with:
                  persist-credentials: false
                  ref: ${{ github.event.inputs.ref }}

            # IF INPUT REF IS NOT DEFINED
            - name: üîñ Check out
              if: ${{ !github.event.inputs.ref }}
              uses: actions/checkout@v2
              with:
                  persist-credentials: false

            # PREPARE DEPLOY

            # SPECITY NODE VERSION
            # - name: üîß Use Node.js
            #   uses: actions/setup-node@v1
            #   with:
            #       node-version: "12.x"

            - name: ‚ôªÔ∏è Cache Node.js modules
              uses: actions/cache@v2
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: ~/.npm
                  key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-node-
                      ${{ runner.OS }}-

            - name: üîß Configure github
              run: git config --global url."https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/".insteadOf ssh://git@github.com/

            - name: üì¶ Install dependencies
              run: npm ci

            - name: üíö Build
              env:
                  CTF_SPACE_ID: ${{ secrets.CTF_SPACE_ID }}
                  CTF_CDA_ACCESS_TOKEN_DELIVERY: ${{ secrets.CTF_CDA_ACCESS_TOKEN_DELIVERY }}
              run: npm run generate

            # DEPLOY
            - name: üìÇ Deploy files via ssh
              uses: easingthemes/ssh-deploy@v2
              env:
                  SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
                  REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
                  REMOTE_USER: ${{ secrets.DEPLOY_USER }}
                  REMOTE_PORT: ${{ secrets.DEPLOY_PORT }}
                  SOURCE: "dist/"
                  TARGET: ${{ secrets.DEPLOY_TARGET }}
